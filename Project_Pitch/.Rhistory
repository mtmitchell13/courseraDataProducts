library(swirl)
q()
setwd("~/Documents/DataScience/courseraDataProducts")
ls()
list=ls()
rm("list")
?datasets
library(help = "datasets")
data(mtcars)
install.packages("shiny")
library(shiny)
names(mtcars)
str(mtcars)
with(mtcars, plot(hp, mpg))
with(mtcars, plot(hp, qssec))
with(mtcars, plot(hp, qsec))
with(mtcars, cor(hp, qsec))
with(mtcars, cor(hp, mpg))
with(mtcars$mpg, sapply(mtcars, cor))
data(wage)
library(help = "datasets")
library(ISLR)
data("faithful")
rm(mtcars)
str(faithful)
with(faithful, plot(waiting, eruptions))
?faithful
with(faithful, cor(waiting, eruptions))
?numericInput
?lm
eruptMod <- lm(eruption~waiting, faithful)
eruptMod <- lm(eruptions~waiting, faithful)
predict(eruptMod, 100)
predict(eruptMod, newdata=100)
predict(eruptMod, newdata=data.frame(100))
predict(eruptMod, newdata=data.frame(waiting=100))
predict(eruptMod, newdata=numeric(waiting=100))
predict(eruptMod, waiting=100)
runApp()
?numericInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
predict(eruptMod, newdata = data.frame(waiting=90))
?predict
t <- predict(eruptMod, newdata = data.frame(waiting=90))
class(t)
t
?numeric
?colnames
as.numeric(t, colnames=FALSE)
predict(eruptMod, newdata = data.frame(waiting=90), colnames=FALSE)
predict(eruptMod, newdata = data.frame(waiting=90, colnames=FALSE))
predict(eruptMod, newdata = data.frame(as.numeric(waiting=90, colnames=FALSE)))
predict(eruptMod, newdata = as.numeric(waiting=90, colnames=FALSE))
predict(eruptMod, newdata = data.frame(waiting=90, colnames=FALSE))
as.numeric(predict(eruptMod, newdata = data.frame(waiting=90)), colnames=FALSE)
runApp()
?faithful
runApp()
runApp()
runApp()
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='mtmitchell13', token='6080DF528C28957E3D5094EE9192CAC0', secret='cP8BElWxSBkNRRzvJ42q4kQbTKf89Y3iQwnQTJY7')
deployApp()
library(shinyapps)
deployApp()
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
author("Project_Pitch")
library(knitr)
setwd("Project_Pitch")
getwd()
browseURL("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(stringr)
slidify("index.Rmd")
q()
